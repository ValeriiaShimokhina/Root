#include <TCanvas.h>
#include <TH1D.h>
#include <TMath.h>
#include <TRandom3.h>
#include <iostream>
#include <TLorentzVector.h>
#include <TLorentzRotation.h>
#include <ROOT/TSeq.hxx>
#include <TF1.h>

void task6A(){
    //Энергия и массы в МэВ:
    Double_t E0 = 1020; //полная энергия
    Double_t Mpi = 139.57039;
    Double_t Mks = 497.611;
    Double_t Emin = 40;
    //Детектор:
    Double_t radius = 30;
    Double_t length = 50;
    Double_t MAX_LENGTH = sqrt(radius*radius + length*length/4);
    //Прочее:
    Double_t pie = TMath::Pi();
    Double_t C_TAU = 2.6844;

    TRandom3 *rnd = new TRandom3();
    rnd->SetSeed(10);

    //Создаём гистограммы:
    TH1D *histKsThetaLab = new TH1D("histKsThetaLab", "", 100, 0, pie);
    TH1D *histKsPhiLab   = new TH1D("histKsPhiLab", "", 100, 0, pie);
    TH1D *histPiPhiLab = new TH1D("histPiPhiLab", "", 100, 0, pie);
    TH1D *histPiThetaLab = new TH1D("histPiPhiLab", "", 100, 0, pie);
    TH1D *histKsLength = new TH1D("histKslength", "", 100, 0, 20);
    TH1D *histAngle = new TH1D("histAngle", "", 100, 0, pie);

    //Для распределения Ks по углу theta:
    TF1 *KsThetaDist = new TF1("KsTheta", "sin(x)*sin(x)*sin(x)", 0, pie);

    UInt_t NTotal = 1e8;
    UInt_t NReg   = 0;
    for (UInt_t i = 0; i < NTotal; i++) {
        //Генерим углы в лабораторной системе:
        Double_t KsTheta = KsThetaDist->GetRandom();
        Double_t KsPhi = 2 * pie * rnd->Rndm() - pie;    
        Double_t Eks = (E0 - 2*Mpi) * rnd->Rndm() + Mpi;
        Double_t Pks = sqrt(Eks*Eks - Mks*Mks);

        //Ks в лабораторной системе:
        TLorentzVector Ks(0, 0, 0, Mks);

        //Буст и вращение:
        Double_t KsBx = Pks*sin(KsTheta)*cos(KsPhi)/Eks;
        Double_t KsBy = Pks*sin(KsTheta)*sin(KsPhi)/Eks;
        Double_t KsBz = Pks*cos(KsTheta)/Eks;

        //Длина пробега Ks:
        Double_t L = - log(rnd->Rndm()) * C_TAU * Pks/Eks; 
        TVector3 Decay(L*sin(KsTheta)*cos(KsPhi), L*sin(KsTheta)*sin(KsPhi), L*cos(KsTheta));

        if (abs(Decay.Z()) < length && abs(Decay.X()) < radius) {

            Double_t PiCosTheta = 2 * rnd->Rndm() - 1;
            Double_t PiSinTheta = sqrt(1 - PiCosTheta*PiCosTheta);
            Double_t PiTheta = acos(PiCosTheta);
            Double_t PiPhi   = 2 * pie * rnd->Rndm() - pie;

            Double_t Epi = (Mks - 2*Mpi) * rnd->Rndm() + Mpi;
            Double_t Ppi = sqrt(Epi*Epi - Mpi*Mpi);

            Double_t PiPx = Ppi*PiSinTheta*cos(PiPhi);
            Double_t PiPy = Ppi*PiSinTheta*sin(PiPhi);
            Double_t PiPz = Ppi*PiCosTheta;

            TLorentzVector PiPlus(PiPx, PiPy, PiPz, Epi);
            TLorentzVector PiMinus(-PiPx, -PiPy, -PiPz, Epi);

            TLorentzRotation T;
            T.Boost(KsBx, KsBy, KsBz);

            Ks = T.VectorMultiplication(Ks);
            PiPlus = T.VectorMultiplication(PiPlus);
            PiMinus = T.VectorMultiplication(PiMinus);

            if (PiPlus.P() < Emin || PiMinus.P() < Emin) continue;
           
            NReg++;
            histKsThetaLab->Fill(KsTheta);
            histKsPhiLab->Fill(KsPhi);

            histPiThetaLab->Fill(PiMinus.Theta());
            histPiThetaLab->Fill(PiMinus.Theta());
            histPiPhiLab->Fill(PiPlus.Phi());
            histPiPhiLab->Fill(PiMinus.Phi());

            histKsLength->Fill(L);
            histAngle->Fill(Ks.Angle(PiPlus.Vect()));
            histAngle->Fill(Ks.Angle(PiMinus.Vect()));
        }
    }
    std::cout << "NReg = " << NReg << std::endl;

    TCanvas *c = new TCanvas("c", "Task 6", 1200, 800);
    c->Divide(2, 3);

    c->cd(1);
    histKsPhiLab->SetTitle("Ks phi angle distribution in lab;#phi_{Ks}, [rad]");
    histKsPhiLab->Draw();

    c->cd(2);
    histKsThetaLab->SetTitle("Ks theta angle distribution in lab;#theta_{Ks}, [rad]");
    histKsThetaLab->Draw();

    c->cd(3);
    histKsLength->SetTitle("Ks mileage distribution;length, [cm]");
    histKsLength->Draw();

    c->cd(4);
    histAngle->SetTitle("Angle between Pi+/Pi- and Ks;#eta_{Pi_{#pm}-Ks}, [rad]");
    histAngle->Draw();
   
    c->cd(5);
    histPiPhiLab->SetTitle("Pi phi angle distribution in lab;#phi_{Pi_{#pm}}, [rad]");
    histPiPhiLab->Draw();

    c->cd(6);
    histPiThetaLab->SetTitle("Pi theta angle distribution in lab;#theta_{Pi_{#pm}}, [rad]");
    histPiThetaLab->Draw();
}
